# 完整的摄影测量工具镜像 - 组合 OpenMVG + COLMAP + OpenMVS
FROM ubuntu:22.04

# 设置时区和非交互模式
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Shanghai

# 设置所有工具的路径
ENV PATH=$PATH:/opt/openMVG_Build/install/bin:/opt/bin

# 安装基础依赖
RUN apt-get update && apt-get install -y tzdata && \
    apt-get install -y \
    cmake \
    build-essential \
    graphviz \
    git \
    coinor-libclp-dev \
    libceres-dev \
    libflann-dev \
    libjpeg-dev \
    liblemon-dev \
    libpng-dev \
    libtiff-dev \
    python3 \
    python3-pip \
    libboost-iostreams-dev \
    libboost-program-options-dev \
    libboost-system-dev \
    libboost-serialization-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-regex-dev \
    libboost-test-dev \
    libcgal-dev \
    libcgal-qt5-dev \
    freeglut3-dev \
    libglew-dev \
    libglfw3-dev \
    libeigen3-dev \
    libsuitesparse-dev \
    libfreeimage-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libopencv-dev \
    libsqlite3-dev \
    libmetis-dev && \
    apt-get autoclean && apt-get clean

# 复制预构建的二进制文件（如果存在的话）
# 这些步骤假设你已经从其他镜像中提取了编译好的文件

# 注意：实际使用时，你应该从各个专门的镜像中复制编译好的文件
# 或者重新构建每个组件

# 创建工作目录
WORKDIR /workspace

# 复制流水线脚本
COPY pipeline.sh /opt/bin/
RUN chmod +x /opt/bin/pipeline.sh

# 默认命令
CMD ["/bin/bash"] 